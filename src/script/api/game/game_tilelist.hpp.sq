/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_tilelist.hpp"
#include "../template/template_tilelist.hpp.sq"


template <> const char *GetClassName<ScriptTileList, ST_GS>() { return "GSTileList"; }

void SQGSTileList_Register(Squirrel *engine)
{
	DefSQClass<ScriptTileList, ST_GS> SQGSTileList("GSTileList");
	SQGSTileList.PreRegister(engine, "GSList");
	SQGSTileList.AddConstructor<void (ScriptTileList::*)(), 1>(engine, "x");

	SQGSTileList.DefSQMethod(engine, &ScriptTileList::AddRectangle,    "AddRectangle",    3, "xii");
	SQGSTileList.DefSQMethod(engine, &ScriptTileList::AddTile,         "AddTile",         2, "xi");
	SQGSTileList.DefSQMethod(engine, &ScriptTileList::RemoveRectangle, "RemoveRectangle", 3, "xii");
	SQGSTileList.DefSQMethod(engine, &ScriptTileList::RemoveTile,      "RemoveTile",      2, "xi");

	SQGSTileList.PostRegister(engine);
}


template <> const char *GetClassName<ScriptTileList_IndustryAccepting, ST_GS>() { return "GSTileList_IndustryAccepting"; }

void SQGSTileList_IndustryAccepting_Register(Squirrel *engine)
{
	DefSQClass<ScriptTileList_IndustryAccepting, ST_GS> SQGSTileList_IndustryAccepting("GSTileList_IndustryAccepting");
	SQGSTileList_IndustryAccepting.PreRegister(engine, "GSTileList");
	SQGSTileList_IndustryAccepting.AddConstructor<void (ScriptTileList_IndustryAccepting::*)(IndustryID industry_id, int radius), 3>(engine, "xii");

	SQGSTileList_IndustryAccepting.PostRegister(engine);
}


template <> const char *GetClassName<ScriptTileList_IndustryProducing, ST_GS>() { return "GSTileList_IndustryProducing"; }

void SQGSTileList_IndustryProducing_Register(Squirrel *engine)
{
	DefSQClass<ScriptTileList_IndustryProducing, ST_GS> SQGSTileList_IndustryProducing("GSTileList_IndustryProducing");
	SQGSTileList_IndustryProducing.PreRegister(engine, "GSTileList");
	SQGSTileList_IndustryProducing.AddConstructor<void (ScriptTileList_IndustryProducing::*)(IndustryID industry_id, int radius), 3>(engine, "xii");

	SQGSTileList_IndustryProducing.PostRegister(engine);
}


template <> const char *GetClassName<ScriptTileList_StationType, ST_GS>() { return "GSTileList_StationType"; }

void SQGSTileList_StationType_Register(Squirrel *engine)
{
	DefSQClass<ScriptTileList_StationType, ST_GS> SQGSTileList_StationType("GSTileList_StationType");
	SQGSTileList_StationType.PreRegister(engine, "GSTileList");
	SQGSTileList_StationType.AddConstructor<void (ScriptTileList_StationType::*)(StationID station_id, ScriptStation::StationType station_type), 3>(engine, "xii");

	SQGSTileList_StationType.PostRegister(engine);
}
