/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_fatalerror.hpp"

${SQUIRREL_INCLUDES}

static SQInteger ${APIUC}ObjectConstructor(HSQUIRRELVM vm)
{
	return sq_throwerror(vm, "${APIUC}Object is not instantiable");
}

static SQInteger ${APIUC}ObjectCloned(HSQUIRRELVM)
{
	throw Script_FatalError("This instance is not cloneable");
}

void SQ${APIUC}_RegisterAll(Squirrel *engine)
{
	DefSQClass<ScriptObject, ScriptType::${APIUC}> SQ${APIUC}Object("${APIUC}Object");
	SQ${APIUC}Object.PreRegister(engine);
	SQ${APIUC}Object.DefSQAdvancedStaticMethod(engine, &${APIUC}ObjectConstructor, "constructor");
	SQ${APIUC}Object.DefSQAdvancedStaticMethod(engine, &${APIUC}ObjectCloned, "_cloned");
	SQ${APIUC}Object.PostRegister(engine);

${SQUIRREL_REGISTER}
}
