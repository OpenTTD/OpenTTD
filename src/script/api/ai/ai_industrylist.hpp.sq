/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_industrylist.hpp"
#include "../template/template_industrylist.hpp.sq"


template <> const char *GetClassName<ScriptIndustryList, ST_AI>() { return "AIIndustryList"; }

void SQAIIndustryList_Register(Squirrel *engine)
{
	DefSQClass<ScriptIndustryList, ST_AI> SQAIIndustryList("AIIndustryList");
	SQAIIndustryList.PreRegister(engine, "AIList");
	SQAIIndustryList.AddConstructor<void (ScriptIndustryList::*)(), 1>(engine, "x");

	SQAIIndustryList.PostRegister(engine);
}


template <> const char *GetClassName<ScriptIndustryList_CargoAccepting, ST_AI>() { return "AIIndustryList_CargoAccepting"; }

void SQAIIndustryList_CargoAccepting_Register(Squirrel *engine)
{
	DefSQClass<ScriptIndustryList_CargoAccepting, ST_AI> SQAIIndustryList_CargoAccepting("AIIndustryList_CargoAccepting");
	SQAIIndustryList_CargoAccepting.PreRegister(engine, "AIList");
	SQAIIndustryList_CargoAccepting.AddConstructor<void (ScriptIndustryList_CargoAccepting::*)(CargoID cargo_id), 2>(engine, "xi");

	SQAIIndustryList_CargoAccepting.PostRegister(engine);
}


template <> const char *GetClassName<ScriptIndustryList_CargoProducing, ST_AI>() { return "AIIndustryList_CargoProducing"; }

void SQAIIndustryList_CargoProducing_Register(Squirrel *engine)
{
	DefSQClass<ScriptIndustryList_CargoProducing, ST_AI> SQAIIndustryList_CargoProducing("AIIndustryList_CargoProducing");
	SQAIIndustryList_CargoProducing.PreRegister(engine, "AIList");
	SQAIIndustryList_CargoProducing.AddConstructor<void (ScriptIndustryList_CargoProducing::*)(CargoID cargo_id), 2>(engine, "xi");

	SQAIIndustryList_CargoProducing.PostRegister(engine);
}
