/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_cargolist.hpp"
#include "../template/template_cargolist.hpp.sq"


template <> const char *GetClassName<ScriptCargoList, ST_AI>() { return "AICargoList"; }

void SQAICargoList_Register(Squirrel *engine)
{
	DefSQClass<ScriptCargoList, ST_AI> SQAICargoList("AICargoList");
	SQAICargoList.PreRegister(engine, "AIList");
	SQAICargoList.AddConstructor<void (ScriptCargoList::*)(), 1>(engine, "x");

	SQAICargoList.PostRegister(engine);
}


template <> const char *GetClassName<ScriptCargoList_IndustryAccepting, ST_AI>() { return "AICargoList_IndustryAccepting"; }

void SQAICargoList_IndustryAccepting_Register(Squirrel *engine)
{
	DefSQClass<ScriptCargoList_IndustryAccepting, ST_AI> SQAICargoList_IndustryAccepting("AICargoList_IndustryAccepting");
	SQAICargoList_IndustryAccepting.PreRegister(engine, "AIList");
	SQAICargoList_IndustryAccepting.AddConstructor<void (ScriptCargoList_IndustryAccepting::*)(IndustryID industry_id), 2>(engine, "xi");

	SQAICargoList_IndustryAccepting.PostRegister(engine);
}


template <> const char *GetClassName<ScriptCargoList_IndustryProducing, ST_AI>() { return "AICargoList_IndustryProducing"; }

void SQAICargoList_IndustryProducing_Register(Squirrel *engine)
{
	DefSQClass<ScriptCargoList_IndustryProducing, ST_AI> SQAICargoList_IndustryProducing("AICargoList_IndustryProducing");
	SQAICargoList_IndustryProducing.PreRegister(engine, "AIList");
	SQAICargoList_IndustryProducing.AddConstructor<void (ScriptCargoList_IndustryProducing::*)(IndustryID industry_id), 2>(engine, "xi");

	SQAICargoList_IndustryProducing.PostRegister(engine);
}


template <> const char *GetClassName<ScriptCargoList_StationAccepting, ST_AI>() { return "AICargoList_StationAccepting"; }

void SQAICargoList_StationAccepting_Register(Squirrel *engine)
{
	DefSQClass<ScriptCargoList_StationAccepting, ST_AI> SQAICargoList_StationAccepting("AICargoList_StationAccepting");
	SQAICargoList_StationAccepting.PreRegister(engine, "AIList");
	SQAICargoList_StationAccepting.AddConstructor<void (ScriptCargoList_StationAccepting::*)(StationID station_id), 2>(engine, "xi");

	SQAICargoList_StationAccepting.PostRegister(engine);
}
